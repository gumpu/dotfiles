snippet impl
	@implement{STMA-${0}}

snippet for
	for(unsigned i = 0; i < ${0}; i++) {
	    /* code */
	}

snippet main
	#include <stdlib.h>

	int main(int argc, char** argv)
	{
		return EXIT_SUCCESS;
	}

snippet hg
	#ifndef HG_`toupper(Filename())`_H
	#define HG_`toupper(Filename())`_H
	${0}
	#endif /* HG_`toupper(Filename())`_H */

snippet line
	/* --------------------------------------------------------------------*/

snippet end
	/* ------------------------ end of file -------------------------------*/

snippet fileheader
	/**
	 * @file `Filename()`
	 * @brief ${0}
	 */

snippet funheader
	/**
	 * @brief ${0}
	 *
	 * @param[in] xxx yyy
	 * @param[out] xxx yyy
	 * @result Nothing
	 */

snippet tstheader
	/**
	 * @brief ${0}
	 *
	 */

snippet isheader
	/**
	 * @brief Are the conditions for transition ${0} met.
	 *
	 * @param[in] current_env Statemachine Environment.
	 * @result true if the conditions are met.
	 */

snippet doheader

	/**
	 * @brief Execute actions for transition ${0}.
	 *
	 * @param[in] current_env Statemachine environment
	 * @result Nothing
	 */

snippet doxy
	/**
	 * @brief ${0}
	 */

snippet init
	 * @pre An initialized or uninitialized module state.
	 *
	 * @post An initialized module state.

snippet @in
	@param[in]

snippet @out
	@param[out]

snippet @brief
	/** @brief ${0} */

